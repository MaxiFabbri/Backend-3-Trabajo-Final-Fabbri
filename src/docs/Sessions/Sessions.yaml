paths:
  /api/sessions/register:
    post:
      summary: Registro de usuarios
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Usuario registrado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: string
                    example: 609c8e8b1c4b4f1b8c8b4567
        '400':
          description: Valores incompletos o usuario ya existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Incomplete values or User already exists
  /api/sessions/login:
    post:
      summary: Inicio de sesión de usuarios
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logged in
        '400':
          description: Valores incompletos o contraseña incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Incomplete values or Incorrect password
        '404':
          description: Usuario no existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User doesn't exist
  /api/sessions/current:
    get:
      summary: Obtener usuario actual
      tags:
        - Sessions
      responses:
        '200':
          description: Usuario actual
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: John
                      last_name:
                        type: string
                        example: Doe
                      email:
                        type: string
                        example: johndoe@example.com
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Unauthenticated
  /api/sessions/unprotectedLogin:
    post:
      summary: Inicio de sesión sin protección
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Inicio de sesión sin protección exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Unprotected Logged in
        '400':
          description: Valores incompletos o contraseña incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Incomplete values or Incorrect password
        '404':
          description: Usuario no existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User doesn't exist
  /api/sessions/unprotectedCurrent:
    get:
      summary: Obtener usuario actual sin protección
      tags:
        - Sessions
      responses:
        '200':
          description: Usuario actual sin protección
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
